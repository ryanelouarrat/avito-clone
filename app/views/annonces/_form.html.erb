<%= form_with model: annonce, local: true, html: { multipart: true } do |form| %>
  <% if annonce.errors.any? %>
    <div class="alert alert-danger">
      <h4>Erreurs:</h4>
      <ul>
        <% annonce.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  
  <div class="form-section">
    <h2>Qu'annoncez-vous aujourd'hui ?</h2>
    <p>Grâce à ces informations les acheteurs peuvent trouver votre annonce plus facilement.</p>
    <%= form.label :category, "Catégorie *", class: "form-label" %>

    <div class="category-selector-container">
      <div class="category-dropdown position-relative">
        <button type="button" class="d-flex align-items-center justify-content-between" id="categoryDropdownBtn">
          <span id="selectedCategoryText">Sélectionner la catégorie</span>
          <i class="bi bi-chevron-down"></i>
        </button>
      </div>
       
      <!-- Hidden input field that will store the actual category value -->
      <%= form.hidden_field :category, id: "categoryHiddenInput" %>
    </div>

    <%= form.label :transaction_type, "Type de transaction", class: "form-label" %>
    <div class="radio-group">
      <%= form.radio_button :transaction_type, 'sell', checked: true, class: "form-check-input" %> 
      <label for="annonce_transaction_type_sell">Vente</label>
      
      <%= form.radio_button :transaction_type, 'buy', class: "form-check-input" %> 
      <label for="annonce_transaction_type_buy">Demande</label>
    </div>
    
    <%= form.label :titre, "Titre de l'annonce *", class: "form-label" %>
    <%= form.text_field :titre, placeholder: "Entrer le titre", class: "form-control" %>

    <%= form.label :description, "Description *", class: "form-label" %>
    <%= form.text_area :description, placeholder: "Entrer la description", rows: 4, class: "form-control" %>
  </div>

  <div class="form-section">
    <h2>Votre Adresse</h2>
    <p>Adresse principale de l'annonce</p>
    
    <div class="location-fields-container">
      <div class="ville-secteur-container mb-3">
        <label for="ville_secteur" class="form-label">Ville - Secteur *</label>
        <div class="position-relative">
          <button type="button" class="d-flex align-items-center justify-content-between" id="citySelectorBtn">
            <div class="d-flex align-items-center">
              <i class="bi bi-geo-alt me-2"></i>
              <span id="selectedCityText">Sélectionner</span>
            </div>
            <i class="bi bi-chevron-down"></i>
          </button>
          
          <!-- Hidden input for storing the selected city value -->
          <%= form.hidden_field :ville_secteur, id: "villeSecteurInput" %>
        </div>
      </div>
      
      <div class="adresse-bien-container mb-3">
        <label for="adresse_bien" class="form-label">Adresse du bien</label>
        <div class="input-group">
          <span class="input-group-text bg-white">
            <i class="bi bi-house"></i>
          </span>
          <%= form.text_field :adresse_bien, id: "adresseBienInput", placeholder: "Adresse du bien", class: "form-control" %>
        </div>
      </div>
      
      <!-- Hidden field that will combine both values -->
      <%= form.hidden_field :localisation, id: "localisationCombinedInput" %>
    </div>
  </div>

  <div class="form-section">
    <h2>Vos coordonnées</h2>
    <%= form.label :phone, "Numéro de téléphone *", class: "form-label" %>
    <%= form.text_field :phone, placeholder: "Numéro de téléphone", class: "form-control" %>
    <div class="mb-3">
      <%= form.check_box :phone_hidden, class: "form-check-input" %> 
      <label for="annonce_phone_hidden" class="form-check-label">Masquer le numéro dans l'annonce</label>
    </div>
  </div>

  <div class="form-section">
    <h2>Détails supplémentaires</h2>
    
    <% current_image_count = annonce.images.attached? ? annonce.images.count : 0 %>
    <div class="image-upload-container">
      <%= form.label :images, "Images de l'annonce (#{current_image_count}/5 images, au moins 1 requise)", class: "form-label" %>
      <%= form.file_field :images, multiple: true, accept: 'image/*', class: "form-control", id: "image-upload" %>
      <small class="text-muted">Cliquez pour sélectionner ou glisser-déposer plusieurs images (jusqu'à <%= 5 - current_image_count %> de plus)</small>
    </div>
    
    <% if annonce.images.attached? && annonce.images.count > 0 %>
      <div class="image-carousel-container mt-3 mb-3">
        <div id="imageCarousel" class="carousel slide" data-ride="carousel">
          <div class="carousel-inner">
            <% annonce.images.each_with_index do |image, index| %>
              <div class="carousel-item <%= 'active' if index == 0 %>">
                <%= image_tag image, class: "d-block w-100", style: "height: 300px; object-fit: contain;" %>
                <div class="carousel-caption">
                  <button type="button" class="btn btn-danger remove-image" data-image-id="<%= image.id %>">
                    Supprimer cette image
                  </button>
                </div>
              </div>
            <% end %>
          </div>
          <a class="carousel-control-prev" href="#imageCarousel" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Précédent</span>
          </a>
          <a class="carousel-control-next" href="#imageCarousel" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Suivant</span>
          </a>
        </div>
      </div>
    <% end %>
    
    <div class="image-preview-container" id="image-preview-container">
      <% if annonce.images.attached? %>
        <% annonce.images.each do |image| %>
          <div class="image-preview">
            <%= image_tag image, alt: "Preview" %>
            <span class="remove-image" data-image-id="<%= image.id %>">×</span>
          </div>
        <% end %>
      <% end %>
    </div>
    
    <%= form.label :prix, "Prix *", class: "form-label" %>
    <%= form.text_field :prix, placeholder: "Entrer le prix", class: "form-control" %>
  </div>
  
  <!-- Panel Overlay Background -->
  <div class="panel-overlay" id="panelOverlay"></div>
  
  <!-- Category Selection Panel -->
  <div class="side-panel" id="categoryPanel">
    <div class="panel-header">
      <h2 class="fs-5 fw-bold mb-0">Sélectionner la catégorie</h2>
      <button type="button" class="close-btn" id="closeCategoryBtn">&times;</button>
    </div>
    <div class="panel-body">
      <!-- Main Categories -->
      <div class="category-main-menu">
        <div class="category-item" data-category="avito-market">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-cart"></i>
            </div>
            <span>Avito Market</span>
          </div>
          <i class="bi bi-chevron-right"></i>
        </div>
        
        <div class="category-item" data-category="avito-vehicules">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-car-front"></i>
            </div>
            <span>Avito Véhicules</span>
          </div>
          <i class="bi bi-chevron-right"></i>
        </div>
        
        <div class="category-item" data-category="avito-immobilier">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-house"></i>
            </div>
            <span>Avito Immobilier</span>
          </div>
          <i class="bi bi-chevron-right"></i>
        </div>
        
        <div class="category-item" data-category="avito-entreprise">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-briefcase"></i>
            </div>
            <span>Avito Entreprise</span>
          </div>
          <i class="bi bi-chevron-right"></i>
        </div>
      </div>
      
      <!-- Subcategories for Avito Market -->
      <div class="category-sub-menu d-none" id="avito-market-submenu">
        <div class="category-back-btn d-flex align-items-center p-2">
          <i class="bi bi-chevron-left me-2"></i>
          <span>Retour</span>
        </div>
        <div class="category-item" data-value="informatique-multimedia">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-laptop"></i>
            </div>
            <span>Informatique, Multimedia et Gadgets</span>
          </div>
        </div>
        
        <div class="category-item" data-value="equipement-bebe">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-balloon"></i>
            </div>
            <span>Equipement pour Bébé et Enfant</span>
          </div>
        </div>
        
        <div class="category-item" data-value="maison-jardin">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-lamp"></i>
            </div>
            <span>Maison et Jardin</span>
          </div>
        </div>
        
        <div class="category-item" data-value="animalerie">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-twitter"></i>
            </div>
            <span>Animalerie</span>
          </div>
        </div>
        
        <div class="category-item" data-value="instruments-musique">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-music-note-beamed"></i>
            </div>
            <span>Instruments de musique</span>
          </div>
        </div>
        
        <div class="category-item" data-value="loisirs-divertissements">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-controller"></i>
            </div>
            <span>Loisirs et Divertissements</span>
          </div>
        </div>
        
        <div class="category-item" data-value="habillement-mode">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-tshirt"></i>
            </div>
            <span>Habillement et Mode</span>
          </div>
        </div>
        
        <div class="category-item" data-value="bien-etre-sport">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-heart-pulse"></i>
            </div>
            <span>Bien être et Sport</span>
          </div>
        </div>
        
        <div class="category-item" data-value="materiels-professionnels">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-tools"></i>
            </div>
            <span>Matériels Professionnels</span>
          </div>
        </div>
        
        <div class="category-item" data-value="stocks-vente-gros">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-box-seam"></i>
            </div>
            <span>Stocks et Vente en gros</span>
          </div>
        </div>
      </div>
      
      <!-- Subcategories for Avito Véhicules -->
      <div class="category-sub-menu d-none" id="avito-vehicules-submenu">
        <div class="category-back-btn d-flex align-items-center p-2">
          <i class="bi bi-chevron-left me-2"></i>
          <span>Retour</span>
        </div>
        <div class="category-item" data-value="voitures">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-car-front"></i>
            </div>
            <span>Voitures</span>
          </div>
        </div>
        
        <div class="category-item" data-value="motos">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-bicycle"></i>
            </div>
            <span>Motos</span>
          </div>
        </div>
        
        <div class="category-item" data-value="velos">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-bicycle"></i>
            </div>
            <span>Vélos</span>
          </div>
        </div>
        
        <div class="category-item" data-value="pieces-accessoires">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-gear"></i>
            </div>
            <span>Pièces et Accessoires pour véhicules</span>
          </div>
        </div>
        
        <div class="category-item" data-value="camions-engins">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-truck"></i>
            </div>
            <span>Camions et Engins</span>
          </div>
        </div>
        
        <div class="category-item" data-value="bateaux">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-water"></i>
            </div>
            <span>Bateaux</span>
          </div>
        </div>
        
        <div class="category-item" data-value="autres-vehicules">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-three-dots"></i>
            </div>
            <span>Autres Véhicules</span>
          </div>
        </div>
      </div>
      
      <!-- Subcategories for Avito Immobilier -->
      <div class="category-sub-menu d-none" id="avito-immobilier-submenu">
        <div class="category-back-btn d-flex align-items-center p-2">
          <i class="bi bi-chevron-left me-2"></i>
          <span>Retour</span>
        </div>
        <div class="category-item" data-value="appartements">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-building"></i>
            </div>
            <span>Appartements</span>
          </div>
        </div>
        
        <div class="category-item" data-value="maisons">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-house-door"></i>
            </div>
            <span>Maisons</span>
          </div>
        </div>
        
        <div class="category-item" data-value="villas-riad">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-house"></i>
            </div>
            <span>Villas-Riad</span>
          </div>
        </div>
        
        <div class="category-item" data-value="bureaux-plateaux">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-building-fill"></i>
            </div>
            <span>Bureaux et Plateaux</span>
          </div>
        </div>
        
        <div class="category-item" data-value="magasins-commerces">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-shop"></i>
            </div>
            <span>Magasins, Commerces et Locaux industriels</span>
          </div>
        </div>
        
        <div class="category-item" data-value="terrains-fermes">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-map"></i>
            </div>
            <span>Terrains, Fermes et Equipement Professionels</span>
          </div>
        </div>
        
        <div class="category-item" data-value="autre-immobilier">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-three-dots"></i>
            </div>
            <span>Autre Immobilier</span>
          </div>
        </div>
      </div>
      
      <!-- Subcategories for Avito Entreprise -->
      <div class="category-sub-menu d-none" id="avito-entreprise-submenu">
        <div class="category-back-btn d-flex align-items-center p-2">
          <i class="bi bi-chevron-left me-2"></i>
          <span>Retour</span>
        </div>
        <div class="category-item" data-value="emploi">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-person-workspace"></i>
            </div>
            <span>Emploi</span>
          </div>
        </div>
        
        <div class="category-item" data-value="services">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-tools"></i>
            </div>
            <span>Services</span>
          </div>
        </div>
        
        <div class="category-item" data-value="stages-cours-formations">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-journal-text"></i>
            </div>
            <span>Stages, Cours et Formations</span>
          </div>
        </div>
        
        <div class="category-item" data-value="business-affaires">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-briefcase"></i>
            </div>
            <span>Business et Affaires commerciales</span>
          </div>
        </div>
        
        <div class="category-item" data-value="evenements">
          <div class="d-flex align-items-center">
            <div class="category-icon">
              <i class="bi bi-calendar-event"></i>
            </div>
            <span>Évènements</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- City Selection Panel -->
  <div class="side-panel" id="cityPanel">
    <div class="panel-header">
      <h2 class="fs-5 fw-bold mb-0">Sélectionner la ville</h2>
      <button type="button" class="close-btn" id="closeCityBtn">&times;</button>
    </div>
    <div class="panel-body">
      <div class="mb-3 position-relative">
        <div class="input-group">
          <span class="input-group-text bg-white">
            <i class="bi bi-search"></i>
          </span>
          <input type="text" class="form-control" id="citySearchInput" placeholder="Rechercher une ville">
        </div>
      </div>
      
      <div class="city-list-container" style="max-height: calc(100vh - 160px); overflow-y: auto;">
        <ul class="list-unstyled mb-0">
          <li class="city-item" data-value="casablanca"><span>Casablanca</span></li>
          <li class="city-item" data-value="rabat"><span>Rabat</span></li>
          <li class="city-item" data-value="fes"><span>Fès</span></li>
          <li class="city-item" data-value="marrakech"><span>Marrakech</span></li>
          <li class="city-item" data-value="agadir"><span>Agadir</span></li>
          <li class="city-item" data-value="tanger"><span>Tanger</span></li>
          <li class="city-item" data-value="meknes"><span>Meknès</span></li>
          <li class="city-item" data-value="oujda"><span>Oujda</span></li>
          <li class="city-item" data-value="kenitra"><span>Kénitra</span></li>
          <li class="city-item" data-value="tetouan"><span>Tétouan</span></li>
          <li class="city-item" data-value="sale"><span>Salé</span></li>
          <li class="city-item" data-value="safi"><span>Safi</span></li>
          <li class="city-item" data-value="el-jadida"><span>El Jadida</span></li>
          <li class="city-item" data-value="khouribga"><span>Khouribga</span></li>
          <li class="city-item" data-value="beni-mellal"><span>Béni Mellal</span></li>
          <li class="city-item" data-value="mohammedia"><span>Mohammedia</span></li>
          <li class="city-item" data-value="nador"><span>Nador</span></li>
          <li class="city-item" data-value="taza"><span>Taza</span></li>
          <li class="city-item" data-value="settat"><span>Settat</span></li>
          <li class="city-item" data-value="tiznit"><span>Tiznit</span></li>
          <li class="city-item" data-value="ouarzazate"><span>Ouarzazate</span></li>
          <li class="city-item" data-value="chefchaouen"><span>Chefchaouen</span></li>
          <li class="city-item" data-value="essaouira"><span>Essaouira</span></li>
          <li class="city-item" data-value="guelmim"><span>Guelmim</span></li>
          <li class="city-item" data-value="laayoune"><span>Laâyoune</span></li>
          <li class="city-item" data-value="dakhla"><span>Dakhla</span></li>
          <li class="city-item" data-value="al-hoceima"><span>Al Hoceima</span></li>
          <li class="city-item" data-value="berkane"><span>Berkane</span></li>
          <li class="city-item" data-value="larache"><span>Larache</span></li>
        </ul>
      </div>
    </div>
  </div>
<% end %>

<script>
  document.addEventListener('turbo:load', function() {
    // Panel elements
    const categoryPanel = document.getElementById('categoryPanel');
    const cityPanel = document.getElementById('cityPanel');
    const panelOverlay = document.getElementById('panelOverlay');
    
    // Buttons
    const categoryDropdownBtn = document.getElementById('categoryDropdownBtn');
    const closeCategoryBtn = document.getElementById('closeCategoryBtn');
    const citySelectorBtn = document.getElementById('citySelectorBtn');
    const closeCityBtn = document.getElementById('closeCityBtn');
    
    // Form inputs
    const categoryHiddenInput = document.getElementById('categoryHiddenInput');
    const selectedCategoryText = document.getElementById('selectedCategoryText');
    const villeSecteurInput = document.getElementById('annonce_ville_secteur') || document.getElementById('villeSecteurInput');
    const adresseBienInput = document.getElementById('adresseBienInput');
    const localisationCombinedInput = document.getElementById('annonce_localisation') || document.getElementById('localisationCombinedInput');
    const selectedCityText = document.getElementById('selectedCityText');
    const citySearchInput = document.getElementById('citySearchInput');
    
    // Category panel
    const mainMenu = document.querySelector('.category-main-menu');
    const subMenus = document.querySelectorAll('.category-sub-menu');
    
    // Function to open panel
    function openPanel(panel) {
      panel.classList.add('show');
      panelOverlay.classList.add('show');
      document.body.style.overflow = 'hidden'; // Prevent scrolling
    }
    
    // Function to close panel
    function closePanel(panel) {
      panel.classList.remove('show');
      panelOverlay.classList.remove('show');
      document.body.style.overflow = ''; // Allow scrolling
    }
    
    // Category panel toggle
    if (categoryDropdownBtn) {
      categoryDropdownBtn.addEventListener('click', function() {
        openPanel(categoryPanel);
        // Show main menu, hide all submenus
        mainMenu.classList.remove('d-none');
        subMenus.forEach(submenu => submenu.classList.add('d-none'));
      });
    }
    
    if (closeCategoryBtn) {
      closeCategoryBtn.addEventListener('click', function() {
        closePanel(categoryPanel);
      });
    }
    
    // City panel toggle
    if (citySelectorBtn) {
      citySelectorBtn.addEventListener('click', function() {
        openPanel(cityPanel);
      });
    }
    
    if (closeCityBtn) {
      closeCityBtn.addEventListener('click', function() {
        closePanel(cityPanel);
      });
    }
    
    // Close panels when clicking overlay
    if (panelOverlay) {
      panelOverlay.addEventListener('click', function() {
        closePanel(categoryPanel);
        closePanel(cityPanel);
      });
    }
    
    // Helper function to find parent category for a subcategory value
    function findCategoryParent(categoryValue) {
      let parentCategory = null;
      
      // Check in each submenu for the category value
      document.querySelectorAll('.category-sub-menu').forEach(submenu => {
        const submenuId = submenu.id;
        const parentId = submenuId.replace('-submenu', '');
        
        // Look for the category value in this submenu
        submenu.querySelectorAll('.category-item[data-value]').forEach(item => {
          if (item.getAttribute('data-value') === categoryValue) {
            parentCategory = parentId;
          }
        });
      });
      
      return parentCategory;
    }
    
    // Handle main category clicks to show submenu
    document.querySelectorAll('.category-main-menu .category-item').forEach(function(item) {
      item.addEventListener('click', function() {
        const categoryId = this.getAttribute('data-category');
        const submenu = document.getElementById(categoryId + '-submenu');
        
        if (submenu) {
          // Hide main menu, show the submenu
          mainMenu.classList.add('d-none');
          submenu.classList.remove('d-none');
        }
      });
    });
    
    // Handle back button clicks in submenus
    document.querySelectorAll('.category-back-btn').forEach(function(backBtn) {
      backBtn.addEventListener('click', function() {
        // Hide all submenus, show main menu
        subMenus.forEach(submenu => submenu.classList.add('d-none'));
        mainMenu.classList.remove('d-none');
      });
    });
    
    // Handle subcategory selection
    document.querySelectorAll('.category-sub-menu .category-item').forEach(function(item) {
      if (!item.classList.contains('category-back-btn')) {
        item.addEventListener('click', function() {
          const categoryValue = this.getAttribute('data-value');
          const categoryText = this.querySelector('span').innerText;
          
          // Set the selected value in the hidden input
          if (categoryHiddenInput) categoryHiddenInput.value = categoryValue;
          // Update the displayed text
          if (selectedCategoryText) selectedCategoryText.innerText = categoryText;
          // Close the panel
          closePanel(categoryPanel);
        });
      }
    });
    
    // Handle city item selection
    document.querySelectorAll('.city-item').forEach(function(item) {
      item.addEventListener('click', function() {
        const cityValue = this.getAttribute('data-value');
        const cityText = this.querySelector('span').innerText;
        
        // Set the selected value in the hidden input
        if (villeSecteurInput) villeSecteurInput.value = cityValue;
        // Update the displayed text
        if (selectedCityText) selectedCityText.innerText = cityText;
        // Close the panel
        closePanel(cityPanel);
        
        // Combine ville-secteur and adresse for localisation field
        updateLocalisationField();
      });
    });
    
    // City search functionality
    if (citySearchInput) {
      citySearchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        
        document.querySelectorAll('.city-item').forEach(function(item) {
          const cityName = item.querySelector('span').innerText.toLowerCase();
          
          if (cityName.includes(searchTerm)) {
            item.style.display = 'block';
          } else {
            item.style.display = 'none';
          }
        });
      });
    }
    
    // Function to combine ville-secteur and adresse into localisation
    function updateLocalisationField() {
      if (!villeSecteurInput || !adresseBienInput || !localisationCombinedInput) return;
      
      const villeSecteur = villeSecteurInput.value;
      const adresseBien = adresseBienInput.value;
      
      if (villeSecteur) {
        if (adresseBien) {
          localisationCombinedInput.value = `${villeSecteur}, ${adresseBien}`;
        } else {
          localisationCombinedInput.value = villeSecteur;
        }
      } else {
        localisationCombinedInput.value = adresseBien;
      }
    }
    
    // Update combined localisation when address changes
    if (adresseBienInput) {
      adresseBienInput.addEventListener('input', updateLocalisationField);
    }
    
    // Initialize category value from existing data
    if (categoryHiddenInput && categoryHiddenInput.value) {
      const categoryValue = categoryHiddenInput.value.trim();
      if (categoryValue) {
        console.log('Found category value:', categoryValue);
        let categoryText = '';
        let categoryFound = false;
        
        // Search all subcategories for a match
        document.querySelectorAll('.category-sub-menu .category-item[data-value]').forEach(function(item) {
          if (item.getAttribute('data-value') === categoryValue) {
            categoryText = item.querySelector('span').innerText;
            categoryFound = true;
          }
        });
        
        if (categoryFound && selectedCategoryText) {
          console.log('Setting category text to:', categoryText);
          selectedCategoryText.innerText = categoryText;
        } else {
          console.log('Category not found in subcategories');
        }
      }
    }
    
    // Initialize city value from existing localisation data
    if (localisationCombinedInput && localisationCombinedInput.value) {
      const locValue = localisationCombinedInput.value;
      // Parse localisation to extract city name (before the comma)
      const cityName = locValue.split(',')[0].trim().toLowerCase();
      
      // Try to find matching city
      let cityFound = false;
      document.querySelectorAll('.city-item').forEach(function(item) {
        const itemCityName = item.querySelector('span').innerText.toLowerCase();
        const itemCityValue = item.getAttribute('data-value').toLowerCase();
        
        if (cityName === itemCityName || cityName === itemCityValue) {
          // We found a match
          if (selectedCityText) {
            selectedCityText.innerText = item.querySelector('span').innerText;
          }
          if (villeSecteurInput) {
            villeSecteurInput.value = item.getAttribute('data-value');
          }
          cityFound = true;
          
          // If there's additional address info after the comma
          if (locValue.includes(',') && adresseBienInput) {
            adresseBienInput.value = locValue.substring(locValue.indexOf(',') + 1).trim();
          }
        }
      });
      
      // If no city match was found, just show the whole localisation as is
      if (!cityFound && selectedCityText) {
        selectedCityText.innerText = locValue;
      }
    }
    
    // Image upload handling
    const imageUpload = document.getElementById('image-upload');
    const previewContainer = document.getElementById('image-preview-container');
    
    // Track the number of existing images
    let existingImageCount = <%= annonce.images.attached? ? annonce.images.count : 0 %>;
    
    if (imageUpload) {
      imageUpload.addEventListener('change', function() {
        // Check if total images would exceed the limit
        if (this.files.length + existingImageCount > 5) {
          alert(`Vous avez déjà ${existingImageCount} image(s). Vous ne pouvez ajouter que ${5 - existingImageCount} image(s) de plus.`);
          this.value = '';
          return;
        }
        
        // Create previews for each selected file
        for (let i = 0; i < this.files.length; i++) {
          const file = this.files[i];
          
          if (!file.type.match('image.*')) {
            continue;
          }
          
          const reader = new FileReader();
          
          reader.onload = function(e) {
            const previewDiv = document.createElement('div');
            previewDiv.className = 'image-preview';
            
            const img = document.createElement('img');
            img.src = e.target.result;
            img.alt = 'Preview';
            
            const removeBtn = document.createElement('span');
            removeBtn.className = 'remove-image';
            removeBtn.innerHTML = '×';
            removeBtn.addEventListener('click', function() {
              previewDiv.remove();
            });
            
            previewDiv.appendChild(img);
            previewDiv.appendChild(removeBtn);
            if (previewContainer) {
              previewContainer.appendChild(previewDiv);
            }
          };
          
          reader.readAsDataURL(file);
        }
      });
    }
    
    // Function to handle image deletion
    function handleImageDeletion(imageId) {
      if (confirm('Êtes-vous sûr de vouloir supprimer cette image?')) {
        // Create a hidden input to mark this image for deletion
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'annonce[remove_image_ids][]';
        hiddenInput.value = imageId;
        document.querySelector('form').appendChild(hiddenInput);
        
        // Remove all preview elements with this image ID
        document.querySelectorAll(`.image-preview .remove-image[data-image-id="${imageId}"]`).forEach(btn => {
          const preview = btn.closest('.image-preview');
          if (preview) preview.remove();
        });
        
        // Remove carousel item with this image ID
        document.querySelectorAll(`.carousel-item .remove-image[data-image-id="${imageId}"]`).forEach(btn => {
          const carouselItem = btn.closest('.carousel-item');
          if (carouselItem) {
            // If this is the active item, make another one active
            const isActive = carouselItem.classList.contains('active');
            const carousel = carouselItem.closest('.carousel-inner');
            const next = carouselItem.nextElementSibling || carouselItem.previousElementSibling;
            
            carouselItem.remove();
            
            if (isActive && next && carousel) {
              next.classList.add('active');
            }
            
            // If no more items in carousel, hide it
            if (carousel && !carousel.querySelector('.carousel-item')) {
              const carouselContainer = document.querySelector('.image-carousel-container');
              if (carouselContainer) carouselContainer.remove();
            }
          }
        });
        
        // Update the count of existing images
        existingImageCount--;
        const imageLabel = document.querySelector('label[for="annonce_images"]');
        if (imageLabel) {
          imageLabel.textContent = `Images de l'annonce (${existingImageCount}/5 images, au moins 1 requise)`;
        }
        
        const uploadHelp = document.querySelector('.image-upload-container small');
        if (uploadHelp) {
          uploadHelp.textContent = `Cliquez pour sélectionner ou glisser-déposer plusieurs images (jusqu'à ${5 - existingImageCount} de plus)`;
        }
      }
    }
    
    // Attach click handlers to all remove image buttons
    document.querySelectorAll('.remove-image[data-image-id]').forEach(function(btn) {
      btn.addEventListener('click', function() {
        const imageId = this.getAttribute('data-image-id');
        if (imageId) {
          handleImageDeletion(imageId);
        }
      });
    });

    // Add debugging logging to help diagnose issues
    console.log('Category hidden input value:', categoryHiddenInput ? categoryHiddenInput.value : 'not found');
    console.log('Localisation input value:', localisationCombinedInput ? localisationCombinedInput.value : 'not found');
  });

  // Immediately initialize category and city values after page load
  document.addEventListener('turbo:load', function initialSetup() {
    // Find the category and set it if possible
    if (categoryHiddenInput && categoryHiddenInput.value) {
      const categoryValue = categoryHiddenInput.value.trim();
      
      // Try to find this category in any submenu
      let foundItem = null;
      let foundSubmenu = null;
      let foundParent = null;
      
      // Check all submenus for this category
      document.querySelectorAll('.category-sub-menu').forEach(submenu => {
        submenu.querySelectorAll('.category-item[data-value]').forEach(item => {
          if (item.getAttribute('data-value') === categoryValue) {
            foundItem = item;
            foundSubmenu = submenu;
            foundParent = submenu.id.replace('-submenu', '');
          }
        });
      });
      
      // If we found the category, set the text
      if (foundItem && selectedCategoryText) {
        selectedCategoryText.innerText = foundItem.querySelector('span').innerText;
        console.log('Category found and text set to:', selectedCategoryText.innerText);
      }
    }
    
    // Set up the city from localization if possible
    if (localisationCombinedInput && localisationCombinedInput.value) {
      const locValue = localisationCombinedInput.value;
      const cityName = locValue.split(',')[0].trim();
      
      document.querySelectorAll('.city-item').forEach(item => {
        const itemText = item.querySelector('span').innerText;
        if (itemText.toLowerCase() === cityName.toLowerCase() || 
            item.getAttribute('data-value').toLowerCase() === cityName.toLowerCase()) {
          if (selectedCityText) {
            selectedCityText.innerText = itemText;
            console.log('City found and text set to:', itemText);
          }
        }
      });
    }
  });
</script>